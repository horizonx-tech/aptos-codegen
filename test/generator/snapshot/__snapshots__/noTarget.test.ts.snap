// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot no target 1`] = `
[
  {
    "factory": undefined,
    "types": {
      "content": "/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BCS, MaybeHexString } from 'aptos'

export type Aggregator = {
  handle: MaybeHexString
  key: MaybeHexString
  limit: BCS.Uint128
}
",
      "path": "./Aggregator.ts",
    },
    "utilities": undefined,
  },
  {
    "factory": undefined,
    "types": {
      "content": "/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BCS, MaybeHexString, Types } from 'aptos'
import { Option } from './Option'
import { OptionalAggregator } from './OptionalAggregator'
import { EventHandle } from './Event'
import { AptosModuleClient, EventGetterParams, TypedMoveResource, TypedVersionedEvent } from '@horizonx/aptos-module-client'

export type BurnCapability = {
  dummy_field: boolean
}

export type Coin = {
  value: BCS.Uint64
}

export type CoinInfo = {
  name: string
  symbol: string
  decimals: BCS.Uint8
  supply: Option<OptionalAggregator>
}

export type CoinStore = {
  coin: Coin
  frozen: boolean
  deposit_events: EventHandle
  withdraw_events: EventHandle
}

export type DepositEvent = {
  amount: BCS.Uint64
}

export type FreezeCapability = {
  dummy_field: boolean
}

export type MintCapability = {
  dummy_field: boolean
}

export type SupplyConfig = {
  allow_upgrades: boolean
}

export type WithdrawEvent = {
  amount: BCS.Uint64
}
",
      "path": "./Coin.ts",
    },
    "utilities": undefined,
  },
  {
    "factory": undefined,
    "types": {
      "content": "/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BCS } from 'aptos'
import { GUID } from './Guid'

export type EventHandle = {
  counter: BCS.Uint64
  guid: GUID
}
",
      "path": "./Event.ts",
    },
    "utilities": undefined,
  },
  {
    "factory": undefined,
    "types": {
      "content": "/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BCS, MaybeHexString } from 'aptos'

export type GUID = {
  id: ID
}

export type ID = {
  creation_num: BCS.Uint64
  addr: MaybeHexString
}
",
      "path": "./Guid.ts",
    },
    "utilities": undefined,
  },
  {
    "factory": undefined,
    "types": {
      "content": "/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
export type Option<T0> = {
  vec: Array<T0>
}
",
      "path": "./Option.ts",
    },
    "utilities": undefined,
  },
  {
    "factory": undefined,
    "types": {
      "content": "/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BCS } from 'aptos'
import { Option } from './Option'
import { Aggregator } from './Aggregator'

export type Integer = {
  value: BCS.Uint128
  limit: BCS.Uint128
}

export type OptionalAggregator = {
  aggregator: Option<Aggregator>
  integer: Option<Integer>
}
",
      "path": "./OptionalAggregator.ts",
    },
    "utilities": undefined,
  },
]
`;
